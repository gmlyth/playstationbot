Parameters:
  PlaystationBotToken:
    Type: String
    Default: Get it from Discord if you don't have it. Don't just make it up.
    Description: Enter the token for your Playstation bot.

Resources:

  PlaystationBotTokenParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: PlaystationBot Token
      Name: playstationbot-token
      Type: String
      Value: !Ref PlaystationBotToken

  EmojiTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: PlaystationBotEmoji 
      AttributeDefinitions: 
        - AttributeName: guild_id
          AttributeType: N
        - AttributeName: emoji_id
          AttributeType: N          
      KeySchema: 
        - AttributeName: guild_id
          KeyType: HASH   
        - AttributeName: emoji_id
          KeyType: RANGE         
      Tags:
          - Key: Vendor
            Value: PlaystationBot
          - Key: Name
            Value: PlaystationBotEmoji    

  TagTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: PlaystationBotTag
      AttributeDefinitions: 
        - AttributeName: tag
          AttributeType: S         
      KeySchema: 
        - AttributeName: tag
          KeyType: HASH         
      Tags:
          - Key: Vendor
            Value: PlaystationBot
          - Key: Name
            Value: PlaystationBotTag              

  SettingTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: PlaystationBotGuildSetting
      AttributeDefinitions: 
        - AttributeName: guild_id
          AttributeType: N
        - AttributeName: setting_key
          AttributeType: S        
      KeySchema: 
        - AttributeName: guild_id
          KeyType: HASH   
        - AttributeName: setting_key
          KeyType: RANGE         
      Tags:
          - Key: Vendor
            Value: PlaystationBot
          - Key: Name
            Value: PlaystationBotGuildSetting   

  BlogPostTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: PlaystationBotBlogPost
      AttributeDefinitions: 
        - AttributeName: post_id
          AttributeType: N
        - AttributeName: published
          AttributeType: N       
      KeySchema: 
        - AttributeName: post_id
          KeyType: HASH   
        - AttributeName: published
          KeyType: RANGE         
      Tags:
          - Key: Vendor
            Value: PlaystationBot
          - Key: Name
            Value: PlaystationBotBlogPost  

  PlaystationBotTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:  
              - Effect: Allow
                Action: "dynamodb:*"
                #arnrewrite
                Resource: 
                  - !GetAtt SettingTable.Arn
                  - !GetAtt EmojiTable.Arn
                  - !GetAtt BlogPostTable.Arn
              - Effect: Allow
                Action: "ssm:*"
                #arnrewrite
                Resource: 
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/playstationbot-token         
      Tags:
          - Key: Vendor
            Value: PlaystationBot
          - Key: Name
            Value: PlaystationBotTaskRole 